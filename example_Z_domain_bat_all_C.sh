#!/bin/bash

conda activate a3pipeline

# export required paths, update accordingly
export PATH=/$path_to/emboss.open-bio.org/pub/EMBOSS/EMBOSS-6.6.0/emboss/:$PATH
export PATH=/$path_to/standard-RAxML-master:$PATH
export PATH=/$path_to/scipio-1.4/:$PATH
export PATH=/$path_to/blat/blat/:$PATH
export PATH=/$path_to/bin/:$PATH


echo Host: `hostname`
echo Now it is: `date`
echo The working directory is: `pwd`

echo example run to generate bat, combined-domain, C motif test

cd ExTRaCT

echo GENERATE HMMER PROFILES
python prep_hmm.py hmmer_profiles_files/6bat_nucl_all.fasta hmmer_profiles_files/6bat_all_msa.fasta hmmer_profiles_files/6bat_all.sto hmmer_profiles_files/6bat_all.hmm /$path_to/mafft 
echo Now it is: `date`

# Update MAFFT location or run mafft
# To generate all test cases from the paper, 9 hmmer profiles are required 
# Change "6bat_nucl_all" to the names of the fasta files in /hmmer_profiles_files:
# 6bat_nucl_single.fasta, 6bat_nucl_double.fasta, laurasiatheria_all.fasta, laurasiatheria_single.fasta, laurasiatheria_double.fasta, primates_all.fasta, primates_single.fasta, primates_double.fasta
# Then update the msa, sto and hmm file names as well to prevent overwrite
# Copy and paste the code above 8 more times for each of the species and domain types and run
# See prep_hmm.py for suggested corrections to ensure input fasta is compatible 

echo START GENE SEARCH
python Gene_search.py species_names.csv hmmer_profiles_files/6bat_all.hmm example_run/bat/all Zdomains_C.csv bat_all_C
echo Now it is: `date`

# Usage: python Gene_search.py INPUT_GENOME_LIST.csv path_to/HMMER_PROFILE.hmm OUTPUT_FOLDER_PATH MOTIF.csv PREFIX
# Suggested output folder path : example_run/reference_species/domain_type
# Suggested prefic structure: Reference-species_Domain-type_Motif
# To generate all 27 test cases from the paper, update the input HMMER and MOTIF files 
# Load all 103 genomes and save in Bat1kgenomes/ folder then update INPUT_GENOME_LIST.csv to species_names_all.csv
# Change "6bat_all.hmm" to the names of the hmm files in /hmmer_profiles_files, listed above
# Update the output file path to create new files and prevent overwrite for each reference species: bat, laurasiatheria and primate 
# Update the output subfolder "all" to each domain type to keep files separate: "all", "single", "double"
# Change the input CSV file for each motif type Salter (A), Hayward (B), and Jebb (C) : Zdomains_A.csv, Zdomains_B.csv, Zdomains_C.csv
# Output of full sequences can be found in ExTRaCT/example_run/bat/all as "bat_all_C_final_data_table.csv"

echo START TABLE TO FASTA
python table_to_fasta.py example_run/bat/all bat_all_C_final_data_table.csv bat_all_C_final_data_table.fasta Zdomain_AA
echo Now it is: `date`

# Change to Zdomain_NC if creating a nucleotide fasta
# Input path and CSV table are from previous output generated by Gene_search.py found in example_run/bat/all/ folder
# Change the file path and file name bat_all_6b_final_data_table.fasta for each species-domain-motif
# Fasta is saved to ExTRaCT/example_run/bat/all/fasta as "bat_all_C_final_data_table.fasta"

echo START PHYLOGENY
python Gene_tree.py /$path_to/mafft example_run/bat/all/fasta bat_all_C_final_data_table.fasta
echo Now it is: `date`

# Update MAFFT location or run mafft directly
# Input path and CSV file are from previous output generated by table_to_fasta.py in example_run/bat/all/fasta folder
# Change the file path and file name bat_all_6b_final_data_table.fasta for each species-domain-motif 
# Output saved to ExTRaCT/example_run/bat/all/tree folder, use tree "RAxML_bestTree.."

echo START SCIPIO
python scipio_run.py example_run/bat/all/bat_all_C_final_data_table.csv example_run/bat/all/scipio/ run1/
echo Now it is: `date`

# Update input file (from Gene_search.py), and prefix for different or batched runs
# Returns accurate start and end locations of sequences from each genome
# If running in batch adjust the folder name below :

# Combine all SCIPIO csv output to generate meta table
awk -F, 'FNR > 1' example_run/bat/all/scipio/run1/*output_sci.csv > example_run/bat/all/scipio/run1_all_scipio.csv
#awk -F, 'FNR > 1' example_run/bat/all/scipio/*/*output_sci.csv > example_run/bat/all/scipio/all_scipio.csv ## for multiple run folders

# Create file with headers
cat example_run/bat/all/scipio/run1/*output_sci.csv | head -n 1 > example_run/bat/all/scipio/headers.csv
cat example_run/bat/all/scipio/headers.csv example_run/bat/all/scipio/run1_all_scipio.csv > example_run/bat/all/scipio/run1_all_scipio_wheader.csv

echo Example Run Complete
